{"version":3,"file":"static/js/644.2aa70394.chunk.js","mappings":"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","sources":["components/common/NavBar.js","components/form/Input.js","components/profile/Infomation.js","components/profile/Booking.js","components/form/TextArea.js","components/form/CheckBox.js","utils/constant.js","hooks/useImagePreview.js","components/profile/Places.js","pages/Profile.js"],"sourcesContent":["import { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\n\r\nconst NavBar = () => {\r\n\r\n  const { user } = useContext(UserContext)\r\n\r\n  return <div>\r\n    <header className=\"flex justify-between items-center\">\r\n\r\n      <Link to=\"/\">\r\n        <div className=\"flex gap-1\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 15.75V18m-7.5-6.75h.008v.008H8.25v-.008Zm0 2.25h.008v.008H8.25V13.5Zm0 2.25h.008v.008H8.25v-.008Zm0 2.25h.008v.008H8.25V18Zm2.498-6.75h.007v.008h-.007v-.008Zm0 2.25h.007v.008h-.007V13.5Zm0 2.25h.007v.008h-.007v-.008Zm0 2.25h.007v.008h-.007V18Zm2.504-6.75h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V13.5Zm0 2.25h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V18Zm2.498-6.75h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V13.5ZM8.25 6h7.5v2.25h-7.5V6ZM12 2.25c-1.892 0-3.758.11-5.593.322C5.307 2.7 4.5 3.65 4.5 4.757V19.5a2.25 2.25 0 0 0 2.25 2.25h10.5a2.25 2.25 0 0 0 2.25-2.25V4.757c0-1.108-.806-2.057-1.907-2.185A48.507 48.507 0 0 0 12 2.25Z\" />\r\n          </svg>\r\n          <span className=\"font-bold\">Tour</span>\r\n        </div></Link>\r\n\r\n      <div className=\"xs:hidden md:flex border border-1 border-gray-300 rounded-full items-center gap-3 px-5 py-1 shadow-md shadow-gray-300\">\r\n        <div>Anywhere</div>\r\n        <div className=\"border-l border-gray-300 border-y-8\" ></div>\r\n        <div>Any Week</div>\r\n        <div className=\"border-l border-gray-300 border-y-8\" ></div>\r\n        <div className=\"text-gray-500\">Add Guest</div>\r\n        <div className=\"bg-primary rounded-full p-1 text-white\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n\r\n      <Link to={user ? \"/profile/\" : \"/login\"}>\r\n        <div className=\"flex border border-1 border-gray-300 rounded-full items-center gap-3 px-5 py-1 shadow-md shadow-gray-300\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 5.25h16.5m-16.5 4.5h16.5m-16.5 4.5h16.5m-16.5 4.5h16.5\" />\r\n          </svg>\r\n          <div className=\"rounded-full p-1 text-white bg-gray-500\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 6a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0ZM4.501 20.118a7.5 7.5 0 0 1 14.998 0A17.933 17.933 0 0 1 12 21.75c-2.676 0-5.216-.584-7.499-1.632Z\" />\r\n            </svg>\r\n          </div>\r\n          {user && (\r\n            <div>\r\n              {user.name}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Link>\r\n\r\n    </header>\r\n  </div>;\r\n};\r\n\r\nexport default NavBar;\r\n","const Input = ({ name, placeholder, id, onClick, type = \"text\", required = true, value, mt = \"8\" }) => {\r\n\r\n    const onChange = (e) => {\r\n        onClick(id, e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className={`mt-${mt} `}>\r\n            <label htmlFor={name} className=\"block text-xl font-medium leading-6 text-gray-900 pb-1\">{name}</label>\r\n            <div className=\"mt-2\">\r\n                <input type={type} placeholder={placeholder} name={name} id={id} autoComplete=\"given-name\" className=\"block w-full rounded-md border-0 py-1.5 p-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6 placeholder:mx-5\" onChange={onChange} required={required} value={value} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import { useContext } from \"react\"\r\nimport { UserContext } from \"../../context/UserContext\"\r\nimport useFetchApiCall from \"../../hooks/useFetchApiCall\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nconst Infomation = () => {\r\n\r\n    const { user, setUser } = useContext(UserContext)\r\n\r\n    const { apiCall } = useFetchApiCall()\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const logout = async () => {\r\n        await apiCall(\"/auth/logout\", \"POST\")\r\n        setUser(null)\r\n        navigate(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center mt-10 max-w-lg mx-auto\">\r\n            <p>Logged in as {user.name} {user.email}</p>\r\n\r\n            <button onClick={logout} className=\"mt-5 bg-primary text-white w-full p-2 rounded-full max-w-sm\">Log Out</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Infomation\r\n","const Booking = () => {\r\n    return (\r\n        <div>\r\n            booking\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Booking\r\n","const TextArea = ({ name, placeholder, id, onClick, type, required = true, value }) => {\r\n\r\n    const onChange = (e) => {\r\n        onClick(id, e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-8 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\">\r\n            <div className=\"sm:col-span-6\">\r\n                <label htmlFor={name} className=\"block text-xl font-medium leading-6 text-gray-900 pb-1\">{name}</label>\r\n                <div className=\"mt-2\">\r\n                    <textarea type={type} placeholder={placeholder} name={name} id={id} autoComplete=\"given-name\" className=\"block w-full rounded-md border-0 py-1.5 p-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6 placeholder:mx-5\" onChange={onChange} required={required} value={value} rows={3} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextArea\r\n","const CheckBox = ({ options, id, name, handleChnage }) => {\r\n\r\n    const handleClick = (e) => {\r\n        handleChnage(e.target)\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-2 space-y-2\">\r\n            <fieldset>\r\n                <legend className=\"font-medium text-gray-900 text-2xl\">{name}</legend>\r\n                <div className=\"mt-2 space-y-2 flex gap-10 flex-wrap\">\r\n                    {options?.map((option, i) => (\r\n                        <div key={i} className=\"flex gap-x-3 pt-1 m-1 cursor-pointer\">\r\n                            <div className=\"flex h-6 items-center\">\r\n                                <input\r\n                                    onClick={handleClick}\r\n                                    id={option.value}\r\n                                    name={id}\r\n                                    type=\"checkbox\"\r\n                                    className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600 cursor-pointer\"\r\n                                    value={option.value}\r\n                                />\r\n                            </div>\r\n                            <div className=\"text-sm leading-6 flex gap-2\">\r\n                                {option.svg}\r\n                                <label htmlFor={option.value} className=\"font-medium text-gray-900 text-base cursor-pointer\">\r\n                                    {option.value}\r\n                                </label>\r\n                                <p className=\"text-gray-500\">{option.message}</p>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </fieldset>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckBox\r\n","export const perks = [\r\n    {\r\n        value: \"Wifi\",\r\n        message: \"\",\r\n        svg: <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8.288 15.038a5.25 5.25 0 0 1 7.424 0M5.106 11.856c3.807-3.808 9.98-3.808 13.788 0M1.924 8.674c5.565-5.565 14.587-5.565 20.152 0M12.53 18.22l-.53.53-.53-.53a.75.75 0 0 1 1.06 0Z\" />\r\n        </svg>\r\n    },\r\n    {\r\n        value: \"Free Parking\",\r\n        message: \"\",\r\n        svg: <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8.25 18.75a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0m3 0h6m-9 0H3.375a1.125 1.125 0 0 1-1.125-1.125V14.25m17.25 4.5a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0m3 0h1.125c.621 0 1.129-.504 1.09-1.124a17.902 17.902 0 0 0-3.213-9.193 2.056 2.056 0 0 0-1.58-.86H14.25M16.5 18.75h-2.25m0-11.177v-.958c0-.568-.422-1.048-.987-1.106a48.554 48.554 0 0 0-10.026 0 1.106 1.106 0 0 0-.987 1.106v7.635m12-6.677v6.677m0 4.5v-4.5m0 0h-12\" />\r\n        </svg>\r\n    },\r\n    {\r\n        value: \"TV\",\r\n        message: \"\",\r\n        svg: <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 20.25h12m-7.5-3v3m3-3v3m-10.125-3h17.25c.621 0 1.125-.504 1.125-1.125V4.875c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125Z\" />\r\n        </svg>\r\n    },\r\n    {\r\n        value: \"Radio\",\r\n        message: \"\",\r\n        svg: <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m3.75 7.5 16.5-4.125M12 6.75c-2.708 0-5.363.224-7.948.655C2.999 7.58 2.25 8.507 2.25 9.574v9.176A2.25 2.25 0 0 0 4.5 21h15a2.25 2.25 0 0 0 2.25-2.25V9.574c0-1.067-.75-1.994-1.802-2.169A48.329 48.329 0 0 0 12 6.75Zm-1.683 6.443-.005.005-.006-.005.006-.005.005.005Zm-.005 2.127-.005-.006.005-.005.005.005-.005.005Zm-2.116-.006-.005.006-.006-.006.005-.005.006.005Zm-.005-2.116-.006-.005.006-.005.005.005-.005.005ZM9.255 10.5v.008h-.008V10.5h.008Zm3.249 1.88-.007.004-.003-.007.006-.003.004.006Zm-1.38 5.126-.003-.006.006-.004.004.007-.006.003Zm.007-6.501-.003.006-.007-.003.004-.007.006.004Zm1.37 5.129-.007-.004.004-.006.006.003-.004.007Zm.504-1.877h-.008v-.007h.008v.007ZM9.255 18v.008h-.008V18h.008Zm-3.246-1.87-.007.004L6 16.127l.006-.003.004.006Zm1.366-5.119-.004-.006.006-.004.004.007-.006.003ZM7.38 17.5l-.003.006-.007-.003.004-.007.006.004Zm-1.376-5.116L6 12.38l.003-.007.007.004-.004.007Zm-.5 1.873h-.008v-.007h.008v.007ZM17.25 12.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5Zm0 4.5a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5Z\" />\r\n        </svg>\r\n    },\r\n    {\r\n        value: \"Pets\",\r\n        message: \"\",\r\n        svg: <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M13.5 21v-7.5a.75.75 0 0 1 .75-.75h3a.75.75 0 0 1 .75.75V21m-4.5 0H2.36m11.14 0H18m0 0h3.64m-1.39 0V9.349M3.75 21V9.349m0 0a3.001 3.001 0 0 0 3.75-.615A2.993 2.993 0 0 0 9.75 9.75c.896 0 1.7-.393 2.25-1.016a2.993 2.993 0 0 0 2.25 1.016c.896 0 1.7-.393 2.25-1.015a3.001 3.001 0 0 0 3.75.614m-16.5 0a3.004 3.004 0 0 1-.621-4.72l1.189-1.19A1.5 1.5 0 0 1 5.378 3h13.243a1.5 1.5 0 0 1 1.06.44l1.19 1.189a3 3 0 0 1-.621 4.72M6.75 18h3.75a.75.75 0 0 0 .75-.75V13.5a.75.75 0 0 0-.75-.75H6.75a.75.75 0 0 0-.75.75v3.75c0 .414.336.75.75.75Z\" />\r\n        </svg>\r\n    },\r\n    {\r\n        value: \"Private Entrance\",\r\n        message: \"\",\r\n        svg: <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8.25 9V5.25A2.25 2.25 0 0 1 10.5 3h6a2.25 2.25 0 0 1 2.25 2.25v13.5A2.25 2.25 0 0 1 16.5 21h-6a2.25 2.25 0 0 1-2.25-2.25V15m-3 0-3-3m0 0 3-3m-3 3H15\" />\r\n        </svg>\r\n\r\n    },\r\n]","import { useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\n\r\nconst usePreviewImg = () => {\r\n    const [imgUrl, setImgUrl] = useState(null);\r\n    const showToast = useAlert();\r\n    const handleImageChange = e => {\r\n        const file = e.target.files[0];\r\n        if (file && file.type.startsWith('image/')) {\r\n            const reader = new FileReader();\r\n\r\n            reader.onloadend = () => {\r\n                setImgUrl(reader.result);\r\n            };\r\n\r\n            reader.readAsDataURL(file);\r\n        } else {\r\n            showToast('Invalid file type', ' Please select an image file', 'error');\r\n            setImgUrl(null);\r\n        }\r\n    };\r\n    return { handleImageChange, imgUrl, setImgUrl };\r\n};\r\n\r\nexport default usePreviewImg;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useRef, useState } from \"react\"\r\nimport Input from \"../form/Input\"\r\nimport TextArea from \"../form/TextArea\";\r\nimport CheckBox from \"../form/CheckBox\";\r\nimport { perks } from \"../../utils/constant\";\r\nimport usePreviewImg from \"../../hooks/useImagePreview\";\r\nimport useFetchApiCall from \"../../hooks/useFetchApiCall\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\n\r\nconst Places = () => {\r\n\r\n    const alert = useAlert()\r\n\r\n    const { apiCall } = useFetchApiCall()\r\n\r\n    const imgClickRef = useRef()\r\n\r\n    const { handleImageChange, imgUrl, setImgUrl } = usePreviewImg()\r\n\r\n    const [hotelInfo, setHotelInfo] = useState({\r\n        title: \"\",\r\n        discription: \"\",\r\n        extraInfo: \"\",\r\n        price: \"\",\r\n        maxGuests: \"\",\r\n        checkIn: \"\",\r\n        checkOut: \"\",\r\n        street: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        pin: \"\",\r\n        country: \"\",\r\n    });\r\n\r\n    const [images, setImages] = useState([]);\r\n\r\n    const [imageURL, setImageURL] = useState(\"\");\r\n\r\n    const [perk, setPerk] = useState([]);\r\n\r\n    const handleChange = (id, value) => {\r\n        setHotelInfo({ ...hotelInfo, [id]: value });\r\n    }\r\n\r\n    const handleRefClick = () => {\r\n        imgClickRef.current.click();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (imgUrl) {\r\n            setImages([...images, imgUrl])\r\n            setImgUrl(\"\")\r\n        }\r\n    }, [imgUrl]);\r\n\r\n    const handleImageUrl = async () => {\r\n        if (imageURL) {\r\n            try {\r\n                const response = await fetch(imageURL)\r\n                const blob = await response.blob();\r\n\r\n                // Read the blob as a data URL\r\n                const reader = new FileReader();\r\n                reader.onloadend = () => {\r\n                    setImages([...images, reader.result])\r\n                    setImageURL(\"\")\r\n                };\r\n                reader.readAsDataURL(blob);\r\n            } catch (Err) {\r\n                console.log(Err.message)\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const handleImageUrlInput = (e) => {\r\n        setImageURL(e.target.value)\r\n    }\r\n\r\n    const handleCheckBox = (data) => {\r\n        if (data.checked) {\r\n            setPerk([...perk, data.value])\r\n        } else {\r\n            const newPerk = perk.filter((p) => p !== data.value)\r\n            setPerk(newPerk)\r\n        }\r\n    }\r\n\r\n    const addHotel = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n\r\n            const response = await apiCall(\"/hotel\", 'POST', { ...hotelInfo, images, perk })\r\n            if (response.success)\r\n                alert.success(\"Hotel added suucessfully\")\r\n            else\r\n                alert.error(\"Something is wrong, plase try again later!!!\")\r\n        } catch (err) {\r\n            alert.error(err.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"max-w-5xl mx-auto mb-10\">\r\n            <form className=\"space-y-12 mt-5\">\r\n\r\n                <div className=\"max-w-2xl\">\r\n                    <Input name=\"Title\" placeholder=\"Enter place name...\" id=\"title\" value={hotelInfo.title} onClick={handleChange} mt=\"2\" />\r\n                </div>\r\n\r\n                <div className=\"max-w-full\">\r\n                    <TextArea name=\"Discription\" placeholder=\"Enter place discription...\" id=\"discription\" type=\"text\" value={hotelInfo.discription} onClick={handleChange} />\r\n                </div>\r\n\r\n                <div className=\"max-w-md\">\r\n                    <Input name=\"Price\" placeholder=\"Enter place price...\" id=\"price\" value={hotelInfo.price} onClick={handleChange} mt=\"2\" />\r\n                </div>\r\n\r\n                <div className={`mt-2`}>\r\n                    <label htmlFor=\"Photo\" className=\"block text-xl font-medium leading-6 text-gray-900 pb-1\">Photos</label>\r\n                    <div className=\"mt-2 flex gap-1\">\r\n                        <input onChange={handleImageUrlInput} type=\"text\" placeholder=\"Enter a link of a image\" name=\"Photo\" id=\"\" autoComplete=\"given-name\" className=\"block w-full rounded-md border-0 py-1.5 p-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6 placeholder:mx-5\" required={false} value={imageURL} />\r\n                        <button type=\"button\" className=\"bg-gray-400 px-4 rounded-2xl\" onClick={handleImageUrl}>Add&nbsp;This</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"grid gap-3 grid-cols-3 md:grid-cols-4 lg:grid-cols-6 mt-2\">\r\n                    {images.length > 0 && images.map((img, i) => (\r\n                        <div key={i} className=\"h-32 flex gap-5\">\r\n                            <img src={img} alt=\"\" className=\"rounded-2xl object-cover w-full\" />\r\n                        </div>\r\n                    ))}\r\n                    <input type=\"file\" multiple className=\"hidden\" ref={imgClickRef} onChange={handleImageChange} />\r\n                    <button type=\"button\" onClick={handleRefClick} className=\"border bg-transparent rounded-2xl p-8 text-gray-600 text-2xl flex justify-center items-center gap-1\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-8 h-8\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5m-13.5-9L12 3m0 0 4.5 4.5M12 3v13.5\" />\r\n                        </svg>\r\n                        Upload\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\">\r\n                    <div className=\"sm:col-span-6\">\r\n                        <Input name=\"Street\" placeholder=\"Enter place street...\" id=\"street\" value={hotelInfo.street} onClick={handleChange} mt=\"2\" />\r\n                    </div>\r\n                    <div className=\"sm:col-span-2\">\r\n                        <Input name=\"City\" placeholder=\"Enter place city...\" id=\"city\" value={hotelInfo.city} onClick={handleChange} mt=\"2\" />\r\n                    </div>\r\n                    <div className=\"sm:col-span-2\">\r\n                        <Input name=\"State\" placeholder=\"Enter place state...\" id=\"state\" value={hotelInfo.state} onClick={handleChange} mt=\"2\" />\r\n                    </div>\r\n                    <div className=\"sm:col-span-2\">\r\n                        <Input name=\"Pin\" placeholder=\"Enter place pin...\" id=\"pin\" value={hotelInfo.pin} onClick={handleChange} mt=\"2\" />\r\n                    </div>\r\n                    <div className=\"sm:col-span-3\">\r\n                        <Input name=\"Country\" placeholder=\"Enter place country...\" id=\"country\" value={hotelInfo.country} onClick={handleChange} mt=\"2\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <CheckBox handleChnage={handleCheckBox} options={perks} id=\"perks\" name=\"Perks\" />\r\n\r\n                <div className=\"max-w-full\">\r\n                    <TextArea name=\"Extra Informations\" placeholder=\"Enter extra ingo...\" id=\"extraInfo\" type=\"text\" value={hotelInfo.extraInfo} onClick={handleChange} />\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\">\r\n                    <div className=\"sm:col-span-2\">\r\n                        <Input name=\"Check In Time\" type=\"time\" placeholder=\"Enter checkin time...\" id=\"checkIn\" value={hotelInfo.checkIn} onClick={handleChange} mt=\"2\" />\r\n                    </div>\r\n                    <div className=\"sm:col-span-2\">\r\n                        <Input name=\"Check Out Time\" type=\"time\" placeholder=\"Enter checkout time...\" id=\"checkOut\" value={hotelInfo.checkOut} onClick={handleChange} mt=\"2\" />\r\n                    </div>\r\n                    <div className=\"sm:col-span-2\">\r\n                        <Input name=\"Max Guests\" placeholder=\"Enter max guests...\" id=\"maxGuests\" value={hotelInfo.maxGuests} onClick={handleChange} mt=\"2\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <button onClick={addHotel} className=\"bg-primary text-white w-full p-2 rounded-2xl\">Save</button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Places\r\n","import { Link, useParams } from \"react-router-dom\"\r\nimport NavBar from \"../components/common/NavBar\"\r\nimport Infomation from \"../components/profile/Infomation\"\r\nimport Booking from \"../components/profile/Booking\"\r\nimport Places from \"../components/profile/Places\"\r\n\r\nconst Profile = () => {\r\n\r\n    const { subpage } = useParams()\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n\r\n            <nav className=\"w-full flex justify-center mt-8 gap-2\">\r\n                <Link to=\"/profile\" className={`py-2 px-6 ${subpage === undefined && \"bg-primary text-white rounded-full\"}`}>Profile</Link>\r\n                <Link to=\"/profile/booking\" className={`py-2 px-6 ${subpage === \"booking\" && \"bg-primary text-white rounded-full\"}`}>My Booking</Link>\r\n                <Link to=\"/profile/places\" className={`py-2 px-6 ${subpage === \"places\" && \"bg-primary text-white rounded-full\"}`}>My Acommandation</Link>\r\n            </nav>\r\n\r\n            <div>\r\n                {subpage === undefined && <Infomation />}\r\n                {subpage === \"booking\" && <Booking />}\r\n                {subpage === \"places\" && <Places />}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n"],"names":["NavBar","user","useContext","UserContext","_jsx","children","_jsxs","className","Link","to","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","name","_ref","placeholder","id","onClick","type","required","value","mt","concat","htmlFor","autoComplete","onChange","e","target","Infomation","setUser","apiCall","useFetchApiCall","navigate","useNavigate","email","async","Booking","rows","options","handleChnage","handleClick","map","option","i","svg","message","perks","usePreviewImg","imgUrl","setImgUrl","useState","showToast","useAlert","handleImageChange","file","files","startsWith","reader","FileReader","onloadend","result","readAsDataURL","Places","alert","imgClickRef","useRef","hotelInfo","setHotelInfo","title","discription","extraInfo","price","maxGuests","checkIn","checkOut","street","city","state","pin","country","images","setImages","imageURL","setImageURL","perk","setPerk","handleChange","useEffect","Input","TextArea","response","fetch","blob","Err","console","log","length","img","src","alt","multiple","ref","handleRefClick","current","click","CheckBox","data","checked","newPerk","filter","p","preventDefault","success","error","err","Profile","subpage","useParams","undefined"],"sourceRoot":""}